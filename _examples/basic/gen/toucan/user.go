// Code generated by toucan, DO NOT EDIT.
package toucan

import models "github.com/endigma/toucan/_examples/basic/models"

type UserPermission string

const (
	UserPermissionRead   UserPermission = "read"
	UserPermissionWrite  UserPermission = "write"
	UserPermissionDelete UserPermission = "delete"
)

// Resolver for resource user
type UserResolver interface {
	HasRoleAdmin(actor *models.User, resource *models.User) bool
	HasRoleSelf(actor *models.User, resource *models.User) bool
	HasRoleViewer(actor *models.User, resource *models.User) bool

	HasAttributePublic(resource *models.User) bool
}

func (a Authorizer) AuthorizeUser(actor *models.User, permission string, resource *models.User) bool {
	switch UserPermission(permission) {
	case UserPermissionRead:
		return a.resolver.User().HasAttributePublic(resource) ||
			a.resolver.User().HasRoleAdmin(actor, resource) ||
			a.resolver.User().HasRoleSelf(actor, resource) ||
			a.resolver.User().HasRoleViewer(actor, resource)
	case UserPermissionWrite:
		return a.resolver.User().HasRoleAdmin(actor, resource) ||
			a.resolver.User().HasRoleSelf(actor, resource)
	case UserPermissionDelete:
		return a.resolver.User().HasRoleAdmin(actor, resource)
	default:
		return false
	}
}
