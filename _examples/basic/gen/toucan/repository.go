// Code generated by toucan, DO NOT EDIT.
package toucan

import models "github.com/endigma/toucan/_examples/basic/models"

type RepositoryPermission string

const (
	RepositoryPermissionRead   RepositoryPermission = "read"
	RepositoryPermissionPush   RepositoryPermission = "push"
	RepositoryPermissionDelEte RepositoryPermission = "del_ete"
)

// Resolver for resource repository
type RepositoryResolver interface {
	HasRoleOwner(actor *models.User, resource *models.Repository) bool
	HasRoleEditor(actor *models.User, resource *models.Repository) bool
	HasRoleViewer(actor *models.User, resource *models.Repository) bool

	HasAttributePublic(resource *models.Repository) bool
}

func (a Authorizer) AuthorizeRepository(actor *models.User, permission string, resource *models.Repository) bool {
	switch RepositoryPermission(permission) {
	case RepositoryPermissionRead:
		return a.resolver.Repository().HasAttributePublic(resource) ||
			a.resolver.Repository().HasRoleOwner(actor, resource) ||
			a.resolver.Repository().HasRoleEditor(actor, resource) ||
			a.resolver.Repository().HasRoleViewer(actor, resource)
	case RepositoryPermissionPush:
		return a.resolver.Repository().HasRoleOwner(actor, resource) ||
			a.resolver.Repository().HasRoleEditor(actor, resource)
	case RepositoryPermissionDelEte:
		return a.resolver.Repository().HasRoleOwner(actor, resource)
	default:
		return false
	}
}
