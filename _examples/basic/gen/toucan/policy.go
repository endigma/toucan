// Code generated by toucan. DO NOT EDIT.
package policy

import (
	"context"
	models "github.com/endigma/toucan/_examples/basic/models"
)

// Global resolver
type Resolver interface {
	Repository() RepositoryResolver
	User() UserResolver
}

// Global authorizer
type Authorizer struct {
	resolver Resolver
}

func (a Authorizer) Authorize(ctx context.Context, actor *models.User, permission string, resource any) bool {
	switch resource.(type) {
	case *models.Repository:
		perm, err := ParseRepositoryPermission(permission)
		if err == nil {
			return a.AuthorizeRepository(ctx, actor, perm, resource.(*models.Repository))
		}
	case *models.User:
		perm, err := ParseUserPermission(permission)
		if err == nil {
			return a.AuthorizeUser(ctx, actor, perm, resource.(*models.User))
		}
	}

	return false
}

func NewAuthorizer(resolver Resolver) *Authorizer {
	return &Authorizer{resolver: resolver}
}
